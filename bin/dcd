#!/usr/bin/env node

var program = require('commander');
var path = require('path');
var fs = require('fs');

function libPath(file) {
    return "../lib/" + file;
}

var packageJson = require(libPath('../package.json'));

program.name = packageJson.name;
program
    .version(packageJson.version)
    .usage('[options] [string]')
    .option('-r, --rescan', 'rescans the directory tree')
    .option('--install-sh [command name]', 'output the shell helper (see README)')
    .parse(process.argv);

if (program.installSh) {
    var cmd_name = packageJson.name;
    if (typeof program.installSh === "string") {
        cmd_name = program.installSh;
    }
    var exePath = fs.realpathSync(__filename);
	console.log([
		cmd_name + ' ()',
		'{',
		'    output="$(' + exePath + ' ${@})";',
		'    case $? in',
		'        1)',
		'            echo -e "\\033[31m${output}\\033[0m";',
		'            cd "${new_path}"',
		'        ;;',
        '        0)',
        '            echo "${output}"',
        '        ;;',
		'    esac',
		'}'
	].join("\n"));
	process.exit(0);
}

if (program.args.length === 0) {
    program.help();
}

var treeinfo = require(libPath('treeinfo'));

if (program.rescan) {
    treeinfo.rescan();
} else {
    var searchString = program.args[0];
    var result = treeinfo.find(searchString);
    if (result !== '') {
        console.log(result);
        process.exit(1);
    } else {
        console.log("directory \'${@}\' not found");
        console.log("Try `dcd -r` to update db.");
        process.exit(0);
    }
}
